{"expireTime":9007200834868343000,"key":"transformer-remark-markdown-ast-afee27ca1dcebed5ff2491b1f7c06585-gatsby-remark-relative-imagesgatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"sync는 결괏값이 올 때까지 기다린다.","position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":23,"offset":24},"indent":[]}}],"position":{"start":{"line":3,"column":1,"offset":2},"end":{"line":3,"column":23,"offset":24},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"asyc는 결괏값이 안 와도 다른 작업을 실행할 수 있다.","position":{"start":{"line":5,"column":1,"offset":26},"end":{"line":5,"column":33,"offset":58},"indent":[]}}],"position":{"start":{"line":5,"column":1,"offset":26},"end":{"line":5,"column":33,"offset":58},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"async 예를 들자면 카드 결제하면 결제 프로세스가 다 될 때까지 기다리지 않고 다른 작업을 할 수도 있다.","position":{"start":{"line":7,"column":1,"offset":60},"end":{"line":7,"column":62,"offset":121},"indent":[]}}],"position":{"start":{"line":7,"column":1,"offset":60},"end":{"line":7,"column":62,"offset":121},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"sync 예시를 들면 그러나 마트 가서 현금을 내면 현금을 거슬러 줄 때 가지 아무것도 못한다.","position":{"start":{"line":9,"column":1,"offset":123},"end":{"line":9,"column":54,"offset":176},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":123},"end":{"line":9,"column":54,"offset":176},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"콜백 함수는 다른 함수에 대한 인수로서 전달되는 함수로서, 나중에 “뒤로 호출”하는 기능이다. 다른 기능을 인수로 받아들이는 함수를 고차 함수라고 하는데,콜백 함수가 실행될 때의 논리를 담고 있다.  ","position":{"start":{"line":11,"column":1,"offset":178},"end":{"line":11,"column":113,"offset":290},"indent":[]}}],"position":{"start":{"line":11,"column":1,"offset":178},"end":{"line":11,"column":113,"offset":290},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"콜백은 함수 안에 함수를 전달인자로 보내고 그래서 나중에 쓸 수 있게끔 한다.","position":{"start":{"line":13,"column":1,"offset":292},"end":{"line":13,"column":44,"offset":335},"indent":[]}}],"position":{"start":{"line":13,"column":1,"offset":292},"end":{"line":13,"column":44,"offset":335},"indent":[]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">serverRequest</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">query<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">var</span> response <span class=\"token operator\">=</span> query <span class=\"token operator\">+</span> <span class=\"token string\">\"full!\"</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">getResults</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">results</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Response from the server: \"</span> <span class=\"token operator\">+</span> results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'5'</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">serverRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The glass is half \"</span><span class=\"token punctuation\">,</span> getResults<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'6'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 4</span>\n<span class=\"token comment\">// 5</span>\n<span class=\"token comment\">// 6</span>\n<span class=\"token comment\">// 1</span>\n<span class=\"token comment\">// 2</span>\n<span class=\"token comment\">// Response from the server: The glass is half full!</span>\n<span class=\"token comment\">// 3</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">serverRequest</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">query<span class=\"token punctuation\">,</span> callback</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">var</span> response <span class=\"token operator\">=</span> query <span class=\"token operator\">+</span> <span class=\"token string\">\"full!\"</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">callback</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">getResults</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">results</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Response from the server: \"</span> <span class=\"token operator\">+</span> results<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'5'</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">serverRequest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The glass is half \"</span><span class=\"token punctuation\">,</span> getResults<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'6'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Result in console after 5 second delay:</span>\n<span class=\"token comment\">// Response from the server: The glass is half full!</span>\n<span class=\"token comment\">//   4</span>\n<span class=\"token comment\">//   5</span>\n<span class=\"token comment\">//   1</span>\n<span class=\"token comment\">//   2</span>\n<span class=\"token comment\">// Response from the server: The glass is half full!</span>\n<span class=\"token comment\">//   3</span>\n<span class=\"token comment\">//   6</span>\n\n<span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'2'</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'3'</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'4'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">//2</span>\n<span class=\"token comment\">//3</span>\n<span class=\"token comment\">//4</span>\n<span class=\"token comment\">//1</span></code></pre></div>","position":{"start":{"line":15,"column":1,"offset":337},"end":{"line":76,"column":4,"offset":1522},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"setTimeout function 또한 callback의 한 종류이다.","position":{"start":{"line":78,"column":1,"offset":1524},"end":{"line":78,"column":41,"offset":1564},"indent":[]}}],"position":{"start":{"line":78,"column":1,"offset":1524},"end":{"line":78,"column":41,"offset":1564},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"callback로 하면 a->b->c->d로 갈려고 하면\na(b(c(d))) 가 되므로 결국엔 콜백헬이 된다.","position":{"start":{"line":80,"column":1,"offset":1566},"end":{"line":81,"column":30,"offset":1627},"indent":[1]}}],"position":{"start":{"line":80,"column":1,"offset":1566},"end":{"line":81,"column":30,"offset":1627},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"Promise","position":{"start":{"line":83,"column":1,"offset":1629},"end":{"line":83,"column":8,"offset":1636},"indent":[]}}],"position":{"start":{"line":83,"column":1,"offset":1629},"end":{"line":83,"column":8,"offset":1636},"indent":[]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"> <span class=\"token keyword\">let</span> promise <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resolve<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"done!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token comment\">// resolve runs the first function in .then</span>\n      promise<span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span>\n        <span class=\"token parameter\">result</span> <span class=\"token operator\">=></span> <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>result <span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// shows \"done!\" after 1 second</span>\n        <span class=\"token parameter\">error</span> <span class=\"token operator\">=></span> <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span>error <span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// doesn't run</span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token comment\">// shows \"done!1\" after 1 second</span></code></pre></div>","position":{"start":{"line":84,"column":1,"offset":1637},"end":{"line":94,"column":4,"offset":1998},"indent":[1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"그래서 나온 게 promise 이긴 한데 \npromise a.then(c) =>).then … 해서 길어지면 치기 힘들어진다 그래서 결국에 나온 게 Async Await","position":{"start":{"line":96,"column":1,"offset":2000},"end":{"line":97,"column":74,"offset":2097},"indent":[1]}}],"position":{"start":{"line":96,"column":1,"offset":2000},"end":{"line":97,"column":74,"offset":2097},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"await promise1\nawait promise2\nawait promise3","position":{"start":{"line":99,"column":1,"offset":2099},"end":{"line":101,"column":15,"offset":2143},"indent":[1,1]}}],"position":{"start":{"line":99,"column":1,"offset":2099},"end":{"line":101,"column":15,"offset":2143},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"등","position":{"start":{"line":103,"column":1,"offset":2145},"end":{"line":103,"column":2,"offset":2146},"indent":[]}}],"position":{"start":{"line":103,"column":1,"offset":2145},"end":{"line":103,"column":2,"offset":2146},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"reference:","position":{"start":{"line":105,"column":1,"offset":2148},"end":{"line":105,"column":11,"offset":2158},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":2148},"end":{"line":105,"column":11,"offset":2158},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://medium.com/javascript-in-plain-english/truly-understanding-promises-in-javascript-cb31ee487860","children":[{"type":"text","value":"https://medium.com/javascript-in-plain-english/truly-understanding-promises-in-javascript-cb31ee487860","position":{"start":{"line":107,"column":2,"offset":2161},"end":{"line":107,"column":104,"offset":2263},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":2160},"end":{"line":107,"column":209,"offset":2368},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":107,"column":1,"offset":2160},"end":{"line":107,"column":209,"offset":2368},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://medium.com/javascript-in-plain-english/async-await-javascript-5038668ec6eb","children":[{"type":"text","value":"https://medium.com/javascript-in-plain-english/async-await-javascript-5038668ec6eb","position":{"start":{"line":109,"column":2,"offset":2371},"end":{"line":109,"column":84,"offset":2453},"indent":[]}}],"position":{"start":{"line":109,"column":1,"offset":2370},"end":{"line":109,"column":169,"offset":2538},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":109,"column":1,"offset":2370},"end":{"line":109,"column":169,"offset":2538},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://guide.freecodecamp.org/javascript/callback-functions/","children":[{"type":"text","value":"https://guide.freecodecamp.org/javascript/callback-functions/","position":{"start":{"line":111,"column":2,"offset":2541},"end":{"line":111,"column":63,"offset":2602},"indent":[]}}],"position":{"start":{"line":111,"column":1,"offset":2540},"end":{"line":111,"column":64,"offset":2603},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":111,"column":1,"offset":2540},"end":{"line":111,"column":64,"offset":2603},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://javascript.info/promise-basics","children":[{"type":"text","value":"https://javascript.info/promise-basics","position":{"start":{"line":113,"column":2,"offset":2606},"end":{"line":113,"column":40,"offset":2644},"indent":[]}}],"position":{"start":{"line":113,"column":1,"offset":2605},"end":{"line":113,"column":41,"offset":2645},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":113,"column":1,"offset":2605},"end":{"line":113,"column":41,"offset":2645},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://en.wikipedia.org/wiki/Callback_(computer_programming)","children":[{"type":"text","value":"https://en.wikipedia.org/wiki/Callback_(computer_programming)","position":{"start":{"line":115,"column":2,"offset":2648},"end":{"line":115,"column":63,"offset":2709},"indent":[]}}],"position":{"start":{"line":115,"column":1,"offset":2647},"end":{"line":115,"column":64,"offset":2710},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":115,"column":1,"offset":2647},"end":{"line":115,"column":64,"offset":2710},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://joshua1988.github.io/web-development/javascript/promise-for-beginners/#%ED%94%84%EB%A1%9C%EB%AF%B8%EC%8A%A4-%EC%BD%94%EB%93%9C---%EA%B8%B0%EC%B4%88","children":[{"type":"text","value":"https://joshua1988.github.io/web-development/javascript/promise-for-beginners/#%ED%94%84%EB%A1%9C%EB%AF%B8%EC%8A%A4-%EC%BD%94%EB%93%9C---%EA%B8%B0%EC%B4%88","position":{"start":{"line":117,"column":2,"offset":2713},"end":{"line":117,"column":157,"offset":2868},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":2712},"end":{"line":117,"column":158,"offset":2869},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":117,"column":1,"offset":2712},"end":{"line":117,"column":158,"offset":2869},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":119,"column":1,"offset":2871},"end":{"line":119,"column":4,"offset":2874},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#feelings","title":null,"children":[],"data":{"hProperties":{"aria-label":"feelings permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Feelings","position":{"start":{"line":121,"column":5,"offset":2880},"end":{"line":121,"column":13,"offset":2888},"indent":[]}}],"position":{"start":{"line":121,"column":1,"offset":2876},"end":{"line":121,"column":13,"offset":2888},"indent":[]},"data":{"id":"feelings","htmlAttributes":{"id":"feelings"},"hProperties":{"id":"feelings","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"역시 코딩은 어렵네요 힘듭니다","position":{"start":{"line":123,"column":1,"offset":2890},"end":{"line":123,"column":17,"offset":2906},"indent":[]}}],"position":{"start":{"line":123,"column":1,"offset":2890},"end":{"line":123,"column":17,"offset":2906},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":125,"column":1,"offset":2908},"end":{"line":125,"column":4,"offset":2911},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#findings","title":null,"children":[],"data":{"hProperties":{"aria-label":"findings permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Findings","position":{"start":{"line":127,"column":5,"offset":2917},"end":{"line":127,"column":13,"offset":2925},"indent":[]}}],"position":{"start":{"line":127,"column":1,"offset":2913},"end":{"line":127,"column":13,"offset":2925},"indent":[]},"data":{"id":"findings","htmlAttributes":{"id":"findings"},"hProperties":{"id":"findings","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"코드들을 쉬운 것부터 해야지 배울 수 있다고 알았습니다.","position":{"start":{"line":129,"column":1,"offset":2927},"end":{"line":129,"column":32,"offset":2958},"indent":[]}}],"position":{"start":{"line":129,"column":1,"offset":2927},"end":{"line":129,"column":32,"offset":2958},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":131,"column":1,"offset":2960},"end":{"line":131,"column":4,"offset":2963},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#future-action-plan","title":null,"children":[],"data":{"hProperties":{"aria-label":"future action plan permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Future Action Plan","position":{"start":{"line":133,"column":5,"offset":2969},"end":{"line":133,"column":23,"offset":2987},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":2965},"end":{"line":133,"column":23,"offset":2987},"indent":[]},"data":{"id":"future-action-plan","htmlAttributes":{"id":"future-action-plan"},"hProperties":{"id":"future-action-plan","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"쉬운 코드를 같은 것을 계속 보면서 다른 방법으로 풀어보겠습니다.","position":{"start":{"line":135,"column":1,"offset":2989},"end":{"line":135,"column":37,"offset":3025},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":2989},"end":{"line":135,"column":37,"offset":3025},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":137,"column":1,"offset":3027},"end":{"line":137,"column":4,"offset":3030},"indent":[]}},{"type":"heading","depth":3,"children":[{"type":"link","url":"#feedback","title":null,"children":[],"data":{"hProperties":{"aria-label":"feedback permalink","class":"anchor before"},"hChildren":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]}},{"type":"text","value":"Feedback","position":{"start":{"line":139,"column":5,"offset":3036},"end":{"line":139,"column":13,"offset":3044},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":3032},"end":{"line":139,"column":13,"offset":3044},"indent":[]},"data":{"id":"feedback","htmlAttributes":{"id":"feedback"},"hProperties":{"id":"feedback","style":"position:relative;"}}},{"type":"paragraph","children":[{"type":"text","value":"열심히 하도록.","position":{"start":{"line":141,"column":1,"offset":3046},"end":{"line":141,"column":9,"offset":3054},"indent":[]}}],"position":{"start":{"line":141,"column":1,"offset":3046},"end":{"line":141,"column":9,"offset":3054},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":143,"column":1,"offset":3056},"end":{"line":143,"column":4,"offset":3059},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":144,"column":1,"offset":3060}}}}