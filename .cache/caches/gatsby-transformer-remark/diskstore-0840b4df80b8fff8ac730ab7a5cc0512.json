{"expireTime":9007200853624921000,"key":"transformer-remark-markdown-html-ast-85fb973b85a38e46ab00bc9b1d34db37-gatsby-remark-relative-imagesgatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이전 포스팅 ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":8,"offset":8}}},{"type":"element","tagName":"a","properties":{"href":"../../../../2019/12/29/React"},"children":[{"type":"text","value":"React","position":{"start":{"line":2,"column":9,"offset":9},"end":{"line":2,"column":14,"offset":14}}}],"position":{"start":{"line":2,"column":8,"offset":8},"end":{"line":2,"column":45,"offset":45}}},{"type":"text","value":"에 나와 있듯이 react 쓰는 이유 중 하나가 component로 설계해서 그것들을 재사용 할 수 있어서 그 사용성 때문에 쓴다. 그 component를 설계 할 때 2종류가 있다. 하나는 Functional Component와 Class Component.","position":{"start":{"line":2,"column":45,"offset":45},"end":{"line":2,"column":190,"offset":190}}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":190,"offset":190}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"그전 포스팅 ","position":{"start":{"line":4,"column":1,"offset":192},"end":{"line":4,"column":8,"offset":199}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"../../../../2019/12/29/React"},"children":[{"type":"text","value":"React","position":{"start":{"line":4,"column":11,"offset":202},"end":{"line":4,"column":16,"offset":207}}}],"position":{"start":{"line":4,"column":10,"offset":201},"end":{"line":4,"column":47,"offset":238}}}],"position":{"start":{"line":4,"column":8,"offset":199},"end":{"line":4,"column":49,"offset":240}}},{"type":"text","value":" 에 예제와 설명이 있지만 ","position":{"start":{"line":4,"column":49,"offset":240},"end":{"line":4,"column":64,"offset":255}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"../../../../2020/01/05/React-Hook"},"children":[{"type":"text","value":"React Hook","position":{"start":{"line":4,"column":67,"offset":258},"end":{"line":4,"column":77,"offset":268}}}],"position":{"start":{"line":4,"column":66,"offset":257},"end":{"line":4,"column":113,"offset":304}}}],"position":{"start":{"line":4,"column":64,"offset":255},"end":{"line":4,"column":115,"offset":306}}},{"type":"text","value":" 에 들어가기 전에 다시 환기시키기 위한 포스팅이다.","position":{"start":{"line":4,"column":115,"offset":306},"end":{"line":4,"column":144,"offset":335}}}],"position":{"start":{"line":4,"column":1,"offset":192},"end":{"line":4,"column":144,"offset":335}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Component란 선택적으로 properties(prop)를 입력값으로 받고 섹션의 UI가 어떻게 보여야 하는지 React element를 돌려주는 Javascript class 혹은 function이라고 보면 된다.","position":{"start":{"line":6,"column":1,"offset":337},"end":{"line":6,"column":123,"offset":459}}}],"position":{"start":{"line":6,"column":1,"offset":337},"end":{"line":6,"column":123,"offset":459}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"아래 예시와 설명은 그전 포스팅 ","position":{"start":{"line":8,"column":1,"offset":461},"end":{"line":8,"column":19,"offset":479}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"../../../../2019/12/29/React"},"children":[{"type":"text","value":"React","position":{"start":{"line":8,"column":22,"offset":482},"end":{"line":8,"column":27,"offset":487}}}],"position":{"start":{"line":8,"column":21,"offset":481},"end":{"line":8,"column":58,"offset":518}}}],"position":{"start":{"line":8,"column":19,"offset":479},"end":{"line":8,"column":60,"offset":520}}},{"type":"text","value":" 에서 대부분 가져온 거다.","position":{"start":{"line":8,"column":60,"offset":520},"end":{"line":8,"column":75,"offset":535}}}],"position":{"start":{"line":8,"column":1,"offset":461},"end":{"line":8,"column":75,"offset":535}}},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{"id":"함수stateless-와-classstatefull-component","style":"position:relative;"},"children":[{"type":"element","tagName":"a","properties":{"href":"#%ED%95%A8%EC%88%98stateless-%EC%99%80-classstatefull-component","aria-label":"함수stateless 와 classstatefull component permalink","class":"anchor before"},"children":[{"type":"raw","value":"<svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg>"}]},{"type":"text","value":"함수(stateless) 와 class(statefull) component","position":{"start":{"line":10,"column":5,"offset":541},"end":{"line":10,"column":47,"offset":583}}}],"position":{"start":{"line":10,"column":1,"offset":537},"end":{"line":10,"column":47,"offset":583}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"함수형은 props를 써서 react 요소를 return을 해줘서 렌더링을 해준다.","position":{"start":{"line":12,"column":1,"offset":585},"end":{"line":12,"column":47,"offset":631}}},{"type":"element","tagName":"br","properties":{},"children":[],"position":{"start":{"line":12,"column":47,"offset":631},"end":{"line":13,"column":1,"offset":634}}},{"type":"text","value":"\n"},{"type":"text","value":"class component는 logic을 담고 있고 state도 담고 다른 component를 담음으로써 container 역할도 한다.","position":{"start":{"line":13,"column":1,"offset":634},"end":{"line":13,"column":78,"offset":711}}}],"position":{"start":{"line":12,"column":1,"offset":585},"end":{"line":13,"column":78,"offset":711}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"둘 중 어느 것을 골라야 할 때 고려해야 할 점은 state를 관리하던가, lifecycle 메서드나, logic이나 event handler을 써야 할 때 class를 쓰고 아니면 함수형 component를 쓰면 된다.","position":{"start":{"line":15,"column":1,"offset":713},"end":{"line":15,"column":124,"offset":836}}}],"position":{"start":{"line":15,"column":1,"offset":713},"end":{"line":15,"column":124,"offset":836}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"prop는 component를 쉽고 다양하게 커스텀 하게 쓸 수 있게 만든 방식이다. 그것들은 속성/데이터를 한 컴포넌트에서 다른 컴포넌트를 보내는 방법을 갖는다. 보통 parent에서 child 컴포넌트로 한방향 데이터플로우 를 갖는다. 주의점은 prop로 보낸 것들은 read-only이고 절대로 수정하면 안 된다.","position":{"start":{"line":17,"column":1,"offset":838},"end":{"line":17,"column":179,"offset":1016}}}],"position":{"start":{"line":17,"column":1,"offset":838},"end":{"line":17,"column":179,"offset":1016}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"react component ‘Welcome’ 이름을 갖는 예시","position":{"start":{"line":19,"column":1,"offset":1018},"end":{"line":19,"column":36,"offset":1053}}}],"position":{"start":{"line":19,"column":1,"offset":1018},"end":{"line":19,"column":36,"offset":1053}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>","position":{"start":{"line":21,"column":1,"offset":1055},"end":{"line":23,"column":4,"offset":1088}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Welcome</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello React<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Welcome <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Hello React!</span></code></pre></div>","position":{"start":{"line":25,"column":1,"offset":1090},"end":{"line":30,"column":4,"offset":1241}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"es6 class를 써서 react component ‘Welcome’ 이름을 갖고 render 메서드를 쓴 예시","position":{"start":{"line":32,"column":1,"offset":1243},"end":{"line":32,"column":64,"offset":1306}}}],"position":{"start":{"line":32,"column":1,"offset":1243},"end":{"line":32,"column":64,"offset":1306}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"“Hello React!”를 화면에 띄워준다.","position":{"start":{"line":34,"column":1,"offset":1308},"end":{"line":34,"column":26,"offset":1333}}}],"position":{"start":{"line":34,"column":1,"offset":1308},"end":{"line":34,"column":26,"offset":1333}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Welcome</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello React<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Welcome <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Hello React!</span></code></pre></div>","position":{"start":{"line":36,"column":1,"offset":1335},"end":{"line":41,"column":4,"offset":1520}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"속성 전달 인자를 갖는 예시","position":{"start":{"line":43,"column":1,"offset":1524},"end":{"line":43,"column":16,"offset":1539}}}],"position":{"start":{"line":43,"column":1,"offset":1524},"end":{"line":43,"column":16,"offset":1539}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Welcome</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Welcome name<span class=\"token operator\">=</span><span class=\"token string\">\"John Doe\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Hello John Doe</span></code></pre></div>","position":{"start":{"line":45,"column":1,"offset":1541},"end":{"line":50,"column":4,"offset":1753}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"props.name으로 전달인자 값을 불러와서 써서 “Hello John Doe”를 돌려줘서 화면에 렌더링 해준다.","position":{"start":{"line":52,"column":1,"offset":1755},"end":{"line":52,"column":65,"offset":1819}}}],"position":{"start":{"line":52,"column":1,"offset":1755},"end":{"line":52,"column":65,"offset":1819}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"state 란 동적인 데이터와 컴포넌트의 성격을 저장하는 객체이다. 동적인 데이터라서 정보가 변하는 것을 렌더링 중간중간에 감지할 수 있다. state는 무조건 class로 만 정의할 수 있다.","position":{"start":{"line":54,"column":1,"offset":1821},"end":{"line":54,"column":109,"offset":1929}}}],"position":{"start":{"line":54,"column":1,"offset":1821},"end":{"line":54,"column":109,"offset":1929}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"state는 props 와 비슷하지만, state는 private 하고 모든 것은 그 componenet에 정의된 state에서 결정된다. props에 의하여 출력이 결정되지 않는다.","position":{"start":{"line":56,"column":1,"offset":1931},"end":{"line":56,"column":103,"offset":2033}}}],"position":{"start":{"line":56,"column":1,"offset":1931},"end":{"line":56,"column":103,"offset":2033}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Hi</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hi<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":58,"column":1,"offset":2035},"end":{"line":64,"column":4,"offset":2129}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"위에 있는 코드는 일반 class component이다.","position":{"start":{"line":66,"column":1,"offset":2131},"end":{"line":66,"column":32,"offset":2162}}}],"position":{"start":{"line":66,"column":1,"offset":2131},"end":{"line":66,"column":32,"offset":2162}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Hi</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n       name<span class=\"token operator\">:</span> ‘MyName’\n     <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n   <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello <span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>name <span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":68,"column":1,"offset":2164},"end":{"line":80,"column":4,"offset":2378}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이것은 state를 추가한 것이다. 위 코드를 보시다시피 props를 불러오는데 super()은 constructor를 쓸 때는 필수이고 props를 부르긴 했는데 안 쓴다. 이것은 왜냐면 나중에 확장성을 위해서 연동이 되는지 확인용이다. state를 초기화할 때 this.state를 썼는데 그 후에 state 변화를 주기 위해서 this.setState를 써야 한다. 이것을 써야지만 component가 state에 변화에 따라 브라우저에 다시 렌더링을 보장할 수 있다.","position":{"start":{"line":82,"column":1,"offset":2380},"end":{"line":82,"column":266,"offset":2645}}}],"position":{"start":{"line":82,"column":1,"offset":2380},"end":{"line":82,"column":266,"offset":2645}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"그러면 state를 바꾸는 예제를 보자.","position":{"start":{"line":84,"column":1,"offset":2647},"end":{"line":84,"column":23,"offset":2669}}}],"position":{"start":{"line":84,"column":1,"offset":2647},"end":{"line":84,"column":23,"offset":2669}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Form</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> username<span class=\"token operator\">:</span> <span class=\"token string\">''</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function-variable function\">handleChange</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> username<span class=\"token operator\">:</span> event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n     <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n       <span class=\"token operator\">&lt;</span>form<span class=\"token operator\">></span>\n         <span class=\"token operator\">&lt;</span>h2 id<span class=\"token operator\">=</span><span class=\"token string\">\"username\"</span><span class=\"token operator\">></span>username<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n         <span class=\"token operator\">&lt;</span>input\n           type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span>\n           name<span class=\"token operator\">=</span><span class=\"token string\">\"username\"</span>\n           value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">}</span>\n           onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleChange<span class=\"token punctuation\">}</span>\n         <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n       <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\n\n       <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>Your username is<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>username<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":86,"column":1,"offset":2671},"end":{"line":114,"column":4,"offset":3225}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"이것은 변화에 따라 결과도 달리 보여주는 예제이다. text에 입력할시 onChange로 변화를 감지하고 그 감지로 handleChange 함수를 불러온다. 그 불러온 함수에 setState로 state를 저장한다. 그리고 setState로 state가 변화가 일어남으로써 component를 rerender 시킨다. this.state = { username: ” } 에 username이 입력값으로 바뀌고 ","position":{"start":{"line":116,"column":1,"offset":3227},"end":{"line":116,"column":231,"offset":3457}}},{"type":"text","value":"<","position":{"start":{"line":116,"column":231,"offset":3457},"end":{"line":116,"column":235,"offset":3461}}},{"type":"text","value":"h3","position":{"start":{"line":116,"column":235,"offset":3461},"end":{"line":116,"column":237,"offset":3463}}},{"type":"text","value":">","position":{"start":{"line":116,"column":237,"offset":3463},"end":{"line":116,"column":241,"offset":3467}}},{"type":"text","value":"Your username is: {this.state.username}","position":{"start":{"line":116,"column":241,"offset":3467},"end":{"line":116,"column":280,"offset":3506}}},{"type":"text","value":"<","position":{"start":{"line":116,"column":280,"offset":3506},"end":{"line":116,"column":284,"offset":3510}}},{"type":"text","value":"h3","position":{"start":{"line":116,"column":284,"offset":3510},"end":{"line":116,"column":286,"offset":3512}}},{"type":"text","value":">","position":{"start":{"line":116,"column":286,"offset":3512},"end":{"line":116,"column":290,"offset":3516}}},{"type":"text","value":"가 결국에 화면에 보이는 것이다.","position":{"start":{"line":116,"column":290,"offset":3516},"end":{"line":116,"column":308,"offset":3534}}}],"position":{"start":{"line":116,"column":1,"offset":3227},"end":{"line":116,"column":308,"offset":3534}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"여기서 추가로 비제어 component라는게 있다. 비제어(uncontrolled)란 위에 this.state, setstate등이랑 비슷하지만 중간에 값을 수정할 수 없다.","position":{"start":{"line":118,"column":1,"offset":3536},"end":{"line":118,"column":98,"offset":3633}}}],"position":{"start":{"line":118,"column":1,"offset":3536},"end":{"line":118,"column":98,"offset":3633}}},{"type":"text","value":"\n"},{"type":"raw","value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Form</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n\n <span class=\"token function-variable function\">handleSubmit</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n   event<span class=\"token punctuation\">.</span><span class=\"token function\">preventDefault</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n   <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Your username is: '</span> <span class=\"token operator\">+</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n     <span class=\"token operator\">&lt;</span>form onSubmit<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleSubmit<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n       <span class=\"token operator\">&lt;</span>h3 id<span class=\"token operator\">=</span><span class=\"token string\">\"username\"</span><span class=\"token operator\">></span>username<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h3<span class=\"token operator\">></span>\n       <span class=\"token operator\">&lt;</span>input\n         type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span>\n         name<span class=\"token operator\">=</span><span class=\"token string\">\"username\"</span>\n         ref<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">input</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>input <span class=\"token operator\">=</span> input<span class=\"token punctuation\">}</span>\n       <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>form<span class=\"token operator\">></span>\n   <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":119,"column":1,"offset":3634},"end":{"line":140,"column":4,"offset":4043}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"비제어를 쓸 때는 ref를 쓴다. 보통 state 등을 쓰는 제어 component를 쓴다.","position":{"start":{"line":142,"column":1,"offset":4045},"end":{"line":142,"column":52,"offset":4096}}}],"position":{"start":{"line":142,"column":1,"offset":4045},"end":{"line":142,"column":52,"offset":4096}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"그러나 이제는 생명주기를 쓰기 위해서 class component를 잘 안쓰고 functional component를 더 많이 쓴다. 이것은 다음 포스트 ","position":{"start":{"line":144,"column":1,"offset":4098},"end":{"line":144,"column":87,"offset":4184}}},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"../../../../2020/01/05/React-Hook"},"children":[{"type":"text","value":"React Hook","position":{"start":{"line":144,"column":90,"offset":4187},"end":{"line":144,"column":100,"offset":4197}}}],"position":{"start":{"line":144,"column":89,"offset":4186},"end":{"line":144,"column":136,"offset":4233}}}],"position":{"start":{"line":144,"column":87,"offset":4184},"end":{"line":144,"column":138,"offset":4235}}},{"type":"text","value":" 이어 가겠다.","position":{"start":{"line":144,"column":138,"offset":4235},"end":{"line":144,"column":146,"offset":4243}}}],"position":{"start":{"line":144,"column":1,"offset":4098},"end":{"line":144,"column":146,"offset":4243}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"References:","position":{"start":{"line":146,"column":1,"offset":4245},"end":{"line":146,"column":12,"offset":4256}}}],"position":{"start":{"line":146,"column":1,"offset":4245},"end":{"line":146,"column":12,"offset":4256}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://reactjs.org/docs/uncontrolled-components.html","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://reactjs.org/docs/uncontrolled-components.html","position":{"start":{"line":148,"column":2,"offset":4259},"end":{"line":148,"column":55,"offset":4312}}}],"position":{"start":{"line":148,"column":1,"offset":4258},"end":{"line":148,"column":56,"offset":4313}}}],"position":{"start":{"line":148,"column":1,"offset":4258},"end":{"line":148,"column":56,"offset":4313}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://stories.jotform.com/7-reasons-why-you-should-use-react-ad420c634247","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://stories.jotform.com/7-reasons-why-you-should-use-react-ad420c634247","position":{"start":{"line":150,"column":2,"offset":4316},"end":{"line":150,"column":77,"offset":4391}}}],"position":{"start":{"line":150,"column":1,"offset":4315},"end":{"line":150,"column":78,"offset":4392}}}],"position":{"start":{"line":150,"column":1,"offset":4315},"end":{"line":150,"column":78,"offset":4392}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://reactjs.org/","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://reactjs.org/","position":{"start":{"line":152,"column":2,"offset":4395},"end":{"line":152,"column":22,"offset":4415}}}],"position":{"start":{"line":152,"column":1,"offset":4394},"end":{"line":152,"column":23,"offset":4416}}}],"position":{"start":{"line":152,"column":1,"offset":4394},"end":{"line":152,"column":23,"offset":4416}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://www.w3schools.com/whatis/whatis_react.asp","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://www.w3schools.com/whatis/whatis_react.asp","position":{"start":{"line":154,"column":2,"offset":4419},"end":{"line":154,"column":51,"offset":4468}}}],"position":{"start":{"line":154,"column":1,"offset":4418},"end":{"line":154,"column":52,"offset":4469}}}],"position":{"start":{"line":154,"column":1,"offset":4418},"end":{"line":154,"column":52,"offset":4469}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://velopert.com/3629","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://velopert.com/3629","position":{"start":{"line":156,"column":2,"offset":4472},"end":{"line":156,"column":27,"offset":4497}}}],"position":{"start":{"line":156,"column":1,"offset":4471},"end":{"line":156,"column":28,"offset":4498}}}],"position":{"start":{"line":156,"column":1,"offset":4471},"end":{"line":156,"column":28,"offset":4498}}},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"element","tagName":"a","properties":{"href":"https://medium.com/the-andela-way/understanding-react-components-37f841c1f3bb","target":"_blank","rel":"nofollow noopener noreferrer"},"children":[{"type":"text","value":"https://medium.com/the-andela-way/understanding-react-components-37f841c1f3bb","position":{"start":{"line":158,"column":2,"offset":4501},"end":{"line":158,"column":79,"offset":4578}}}],"position":{"start":{"line":158,"column":1,"offset":4500},"end":{"line":158,"column":80,"offset":4579}}}],"position":{"start":{"line":158,"column":1,"offset":4500},"end":{"line":158,"column":80,"offset":4579}}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":159,"column":1,"offset":4580}}}}