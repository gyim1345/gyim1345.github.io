{"expireTime":9007200834868342000,"key":"transformer-remark-markdown-ast-6504e1dfef6801b8d86bfc10abd405e8-gatsby-remark-relative-imagesgatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"그전 포스트 ","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":8,"offset":8},"indent":[]}},{"type":"strong","children":[{"type":"link","title":null,"url":"../../../../2019/12/29/React","children":[{"type":"text","value":"React","position":{"start":{"line":2,"column":11,"offset":11},"end":{"line":2,"column":16,"offset":16},"indent":[]}}],"position":{"start":{"line":2,"column":10,"offset":10},"end":{"line":2,"column":47,"offset":47},"indent":[]}}],"position":{"start":{"line":2,"column":8,"offset":8},"end":{"line":2,"column":49,"offset":49},"indent":[]}},{"type":"text","value":" 와 ","position":{"start":{"line":2,"column":49,"offset":49},"end":{"line":2,"column":52,"offset":52},"indent":[]}},{"type":"strong","children":[{"type":"link","title":null,"url":"../../../../2020/01/05/Class-Component-And-Functional-Component","children":[{"type":"text","value":"Class-Component-And-Functional-Component","position":{"start":{"line":2,"column":55,"offset":55},"end":{"line":2,"column":95,"offset":95},"indent":[]}}],"position":{"start":{"line":2,"column":54,"offset":54},"end":{"line":2,"column":161,"offset":161},"indent":[]}}],"position":{"start":{"line":2,"column":52,"offset":52},"end":{"line":2,"column":163,"offset":163},"indent":[]}},{"type":"text","value":" 로 react에 대하여 알아 봤다. 그리고 요즘에는 Class Component를 잘 안쓴다고 했다. Class Component를 잘 안쓰는 이유는 우리는 생명 주기라는 것을 주기 위해서 그런것이다.","position":{"start":{"line":2,"column":163,"offset":163},"end":{"line":2,"column":276,"offset":276},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":276,"offset":276},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"생명주기(life cycle) method는 구성 요소의 여러 단계 동안 실행되는 사용자 지정 기능이다. 구성 요소가 생성되어 DOM(장착)에 삽입될 때, 구성 요소가 업데이트될 때, 구성 요소가 DOM에서 마운트 해제되거나 제거될 때 사용할 수 있는 방법이 있다. 쉽게 말해서 화면 렌더링 후에 무엇인가 추가, 변경, 삭제 하는게 생명주기 메소드다.","position":{"start":{"line":4,"column":1,"offset":278},"end":{"line":4,"column":197,"offset":474},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":278},"end":{"line":4,"column":197,"offset":474},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"생명주기 메소드","position":{"start":{"line":6,"column":1,"offset":476},"end":{"line":6,"column":9,"offset":484},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":476},"end":{"line":6,"column":9,"offset":484},"indent":[]}},{"type":"list","ordered":false,"start":null,"spread":false,"children":[{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"componentDidMount()","position":{"start":{"line":8,"column":3,"offset":488},"end":{"line":8,"column":22,"offset":507},"indent":[]}}],"position":{"start":{"line":8,"column":3,"offset":488},"end":{"line":8,"column":22,"offset":507},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":486},"end":{"line":8,"column":22,"offset":507},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"componentDidUpdate()","position":{"start":{"line":9,"column":3,"offset":510},"end":{"line":9,"column":23,"offset":530},"indent":[]}}],"position":{"start":{"line":9,"column":3,"offset":510},"end":{"line":9,"column":23,"offset":530},"indent":[]}}],"position":{"start":{"line":9,"column":1,"offset":508},"end":{"line":9,"column":23,"offset":530},"indent":[]}},{"type":"listItem","spread":false,"checked":null,"children":[{"type":"paragraph","children":[{"type":"text","value":"componentWillUnmount()","position":{"start":{"line":10,"column":3,"offset":533},"end":{"line":10,"column":25,"offset":555},"indent":[]}}],"position":{"start":{"line":10,"column":3,"offset":533},"end":{"line":10,"column":25,"offset":555},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":531},"end":{"line":10,"column":25,"offset":555},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":486},"end":{"line":10,"column":25,"offset":555},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"보통 이렇게 3개를 주로 쓴다. component 가 mount 된직후에 componentDidMount() 가 실행된다. Component의 state에 변화가 일어 나면 componentDidUpdate() 가 실행된다. Component가  Dom에서 지워 지면 componentWillUnmount()가 실행 된다.","position":{"start":{"line":12,"column":1,"offset":557},"end":{"line":12,"column":181,"offset":737},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":557},"end":{"line":12,"column":181,"offset":737},"indent":[]}},{"type":"html","value":"<p><a href =\"https://velopert.com/1130\"><img src=\"/img/lifecycle/lifecycle.png\" alt=\"lifecycle\"/></a></p>","position":{"start":{"line":14,"column":1,"offset":739},"end":{"line":14,"column":106,"offset":844},"indent":[]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">FormattedDate</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>It is <span class=\"token punctuation\">{</span>props<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">.</span><span class=\"token function\">toLocaleTimeString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Clock</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>date<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timerID <span class=\"token operator\">=</span> <span class=\"token function\">setInterval</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token number\">1000</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">clearInterval</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>timerID<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">tick</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      date<span class=\"token operator\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello<span class=\"token punctuation\">,</span> world<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>FormattedDate date<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>date<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Clock <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":16,"column":1,"offset":846},"end":{"line":63,"column":4,"offset":1592},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"검색을 많이 해보셨으면 아시겠지만 인터넷에 떠도는 제일 흔한 시계 예제다.","position":{"start":{"line":65,"column":1,"offset":1594},"end":{"line":65,"column":42,"offset":1635},"indent":[]}},{"type":"break","position":{"start":{"line":65,"column":42,"offset":1635},"end":{"line":66,"column":1,"offset":1638},"indent":[1]}},{"type":"text","value":"Hello, world render을 해주고 render후 바로 componentDidMount()가 실행 되면서 tick함수를 호출하고 시간을 띄워줍니다. componentWillUnmount()는 Dom에서 clock component가 없어지면 timer을 멈추게 한다.","position":{"start":{"line":66,"column":1,"offset":1638},"end":{"line":66,"column":155,"offset":1792},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":1594},"end":{"line":66,"column":155,"offset":1792},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"prop, this.state, lifecycle, component등 많은것을 써야하므로 복잡하다고 생각 할 수 있지만 Hook을 쓰면 이러한것들을 더 쉽게 쓸 수 있다. 다음 포스트는  ","position":{"start":{"line":68,"column":1,"offset":1794},"end":{"line":68,"column":107,"offset":1900},"indent":[]}},{"type":"strong","children":[{"type":"link","title":null,"url":"../../../../2020/01/05/React-Hook","children":[{"type":"text","value":"React Hook","position":{"start":{"line":68,"column":110,"offset":1903},"end":{"line":68,"column":120,"offset":1913},"indent":[]}}],"position":{"start":{"line":68,"column":109,"offset":1902},"end":{"line":68,"column":156,"offset":1949},"indent":[]}}],"position":{"start":{"line":68,"column":107,"offset":1900},"end":{"line":68,"column":158,"offset":1951},"indent":[]}},{"type":"text","value":" 에 대하여 알아보자.","position":{"start":{"line":68,"column":158,"offset":1951},"end":{"line":68,"column":170,"offset":1963},"indent":[]}}],"position":{"start":{"line":68,"column":1,"offset":1794},"end":{"line":68,"column":170,"offset":1963},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"References:","position":{"start":{"line":71,"column":1,"offset":1966},"end":{"line":71,"column":12,"offset":1977},"indent":[]}}],"position":{"start":{"line":71,"column":1,"offset":1966},"end":{"line":71,"column":12,"offset":1977},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://reactjs.org/docs/state-and-lifecycle.html#adding-lifecycle-methods-to-a-class","children":[{"type":"text","value":"https://reactjs.org/docs/state-and-lifecycle.html#adding-lifecycle-methods-to-a-class","position":{"start":{"line":73,"column":2,"offset":1980},"end":{"line":73,"column":87,"offset":2065},"indent":[]}}],"position":{"start":{"line":73,"column":1,"offset":1979},"end":{"line":73,"column":88,"offset":2066},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":73,"column":1,"offset":1979},"end":{"line":73,"column":88,"offset":2066},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://velog.io/@kyusung/%EB%A6%AC%EC%95%A1%ED%8A%B8-%EA%B5%90%EA%B3%BC%EC%84%9C-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%99%80-%EB%9D%BC%EC%9D%B4%ED%94%84%EC%82%AC%EC%9D%B4%ED%81%B4-%EC%9D%B4%EB%B2%A4%ED%8A%B8","children":[{"type":"text","value":"https://velog.io/@kyusung/%EB%A6%AC%EC%95%A1%ED%8A%B8-%EA%B5%90%EA%B3%BC%EC%84%9C-%EC%BB%B4%ED%8F%AC%EB%84%8C%ED%8A%B8%EC%99%80-%EB%9D%BC%EC%9D%B4%ED%94%84%EC%82%AC%EC%9D%B4%ED%81%B4-%EC%9D%B4%EB%B2%A4%ED%8A%B8","position":{"start":{"line":75,"column":2,"offset":2069},"end":{"line":75,"column":212,"offset":2279},"indent":[]}}],"position":{"start":{"line":75,"column":1,"offset":2068},"end":{"line":75,"column":213,"offset":2280},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":75,"column":1,"offset":2068},"end":{"line":75,"column":213,"offset":2280},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://velopert.com/1130","children":[{"type":"text","value":"https://velopert.com/1130","position":{"start":{"line":77,"column":2,"offset":2283},"end":{"line":77,"column":27,"offset":2308},"indent":[]}}],"position":{"start":{"line":77,"column":1,"offset":2282},"end":{"line":77,"column":28,"offset":2309},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":77,"column":1,"offset":2282},"end":{"line":77,"column":28,"offset":2309},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":77,"column":28,"offset":2309}}}}