{"expireTime":9007200837854416000,"key":"transformer-remark-markdown-html-f4c63c0401f85f8bf5940f7e42069094-gatsby-remark-relative-imagesgatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-external-links-","val":"<p>주어진 todolist를 이해하고 백지상태에서부터 작성할 수 있었습니다.</p>\n<h3 id=\"facts\" style=\"position:relative;\"><a href=\"#facts\" aria-label=\"facts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Facts</h3>\n<h4 id=\"로딩과-메모리\" style=\"position:relative;\"><a href=\"#%EB%A1%9C%EB%94%A9%EA%B3%BC-%EB%A9%94%EB%AA%A8%EB%A6%AC\" aria-label=\"로딩과 메모리 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>로딩과 메모리</h4>\n<p>실행 파일(명령서 담음) <br>\n기계:(컴퓨터 과학 입장에서): 입력에 따라 동작하는 실체 있던 없던 모든것입니다.\n예) 윈도우스, 리눅스, 자바, 컴퓨터 안의 계산기 프로그램 등</p>\n<p>리소스 파일(실행 파일의 입출력 저장 파일)<br>\n예) 이미지 파일, 텍스트 파일 동영상.</p>\n<p>실행 파일과 리소스 파일이 byte string 으로 연결됨</p>\n<p>프로그램이 실행 되면 파일들을 하드 디스크에서 램으로 적재 합니다. 실행 코드는 작으나 리소스 파일들을 램에 적재 혹은 로딩 때문에 시간이 걸립니다.</p>\n<p>로딩이 다 되면 보통 code-data-heap-stack 의 형태로 구분됩니다.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Memory</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">code</td>\n</tr>\n<tr>\n<td align=\"center\">data</td>\n</tr>\n<tr>\n<td align=\"center\">heap</td>\n</tr>\n<tr>\n<td align=\"center\">stack</td>\n</tr>\n</tbody>\n</table>\n<p>(code, data) 는 프로그램 명령어를 담고 있고 <br>\n(heap stack) 읽고 쓸수 있는 공간<br></p>\n<p>|메모리 계층 구조||\n|:-:||:-:|\n|cache|속도 제일 빠르고 비싸다|\n|ram|속도 조금 빠르고 조금 비싸다|\n|storage(hdd,sdd)|속도 느리고 싸다|</p>\n<p>파일들의 크기, 자주 쓰는 정도, 등 에 따라 메모리 계층 구조에 위치한다. 엄청 자주 쓰고 크기도 작으면 cache 계속 쓰고 있지만 어느정도 크기이면 ram. 자주 안쓰고 크기가 크면 storage.</p>\n<p>데이터의 지역성</p>\n<p>자주 쓰는 데이터들을 빠른 계층 구조에 저장 함으로써 빠르게 쓸수 있습니다.\n로딩 할시에는 보통 계층 구조에 더 구체적으로 하드에서 램으로 데이터를 옮겨서 cpu 가 쓸수 있게끔 저장합니다.</p>\n<p>Reference:<br>\n<a href=\"https://www.youtube.com/watch?v=aCYoX38BZx8\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://www.youtube.com/watch?v=aCYoX38BZx8</a></p>\n<hr>\n<p> PascalCase means the first char should be capitalized\n<br></p>\n<p> camelCase means the first char should be lowercased</p>\n<hr>\n<h3 id=\"feelings\" style=\"position:relative;\"><a href=\"#feelings\" aria-label=\"feelings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Feelings</h3>\n<p>허허</p>\n<hr>\n<h3 id=\"findings\" style=\"position:relative;\"><a href=\"#findings\" aria-label=\"findings permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Findings</h3>\n<p>camelCase Pascalcase 잘 상기하면서 코딩 하면 오타가 덜 나네요.\n집중을 하지 않으면 오타가 많이 나서 잘못하면 코드가 실행이 안됩니다.</p>\n<hr>\n<h3 id=\"future-action-plan\" style=\"position:relative;\"><a href=\"#future-action-plan\" aria-label=\"future action plan permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Future Action Plan</h3>\n<p>오타를 내지 않기 위해서 집중하면서 쓰도록 합시다.</p>\n<hr>\n<h3 id=\"feedback\" style=\"position:relative;\"><a href=\"#feedback\" aria-label=\"feedback permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Feedback</h3>\n<p>관리 잘 합시다</p>\n<hr>"}