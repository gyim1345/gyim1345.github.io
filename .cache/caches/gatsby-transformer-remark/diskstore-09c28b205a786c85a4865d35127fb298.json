{"expireTime":9007200853624921000,"key":"transformer-remark-markdown-ast-5a25775c18b0fca5a7accf2ead3331fd-gatsby-remark-relative-imagesgatsby-remark-katexgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-autolink-headersgatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypantsgatsby-remark-external-links-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"React & React 주요 개념.(Component, Props, State)","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":46,"offset":46},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":46,"offset":46},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"React는 사용자 인터페이스 구축에 사용되는 오픈 소스 JavaScript 라이브러리이다. 특히 단일 페이지 애플리케이션용으로 쓰인다. 이 또한 재사용 가능한 UI 구성요소를 만들어서 쓸 수 있다.","position":{"start":{"line":4,"column":1,"offset":48},"end":{"line":4,"column":112,"offset":159},"indent":[]}}],"position":{"start":{"line":4,"column":1,"offset":48},"end":{"line":4,"column":112,"offset":159},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"react는 virtual Dom 을 써서 status에 따라 유기적으로 rendering 을 해줄 수 있는 것이다.","position":{"start":{"line":6,"column":1,"offset":161},"end":{"line":6,"column":66,"offset":226},"indent":[]}}],"position":{"start":{"line":6,"column":1,"offset":161},"end":{"line":6,"column":66,"offset":226},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"react 쓰는 이유는 component로 설계해서 그것들을 재사용 할 수 있어서 사용성 때문에 쓴다. virtual dom을 씀으로써 렌더링이 빨라진다. 함축을 해서 추상화 함으로 사용자가 내부 코드까지 볼 필요 없다.","position":{"start":{"line":8,"column":1,"offset":228},"end":{"line":8,"column":124,"offset":351},"indent":[]}}],"position":{"start":{"line":8,"column":1,"offset":228},"end":{"line":8,"column":124,"offset":351},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"react의 data flow는 flux나 redux를 쓴다.  ","position":{"start":{"line":10,"column":1,"offset":353},"end":{"line":10,"column":37,"offset":389},"indent":[]}}],"position":{"start":{"line":10,"column":1,"offset":353},"end":{"line":10,"column":37,"offset":389},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"flux  ","position":{"start":{"line":12,"column":1,"offset":391},"end":{"line":12,"column":7,"offset":397},"indent":[]}}],"position":{"start":{"line":12,"column":1,"offset":391},"end":{"line":12,"column":7,"offset":397},"indent":[]}},{"type":"html","value":"<p><a href =\"https://facebook.github.io/flux/docs/in-depth-overview\"><img src=\"/img/react/flux.png\" alt=\"flux\"/></a></p>","position":{"start":{"line":13,"column":1,"offset":398},"end":{"line":13,"column":121,"offset":518},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"모든 데이터는 dispatcher로 흐른다. action이 dispatcher로 흐르는데 이 action 들은 사용자가 view와의 상호 작용으로 생성이 된다. 그런 후에 그것들이 callback 와 함께 등록된 stores 불러와서 all stores에 행동 강령을 전달한다. 등록된 콜백으로 stores가 state에 맞는 action 들에 한 해 서서 respond 한다. stores는 change event라는 걸 발산하고 controller-view 한태 data 계층에 변화가 있다고 알려준다. controller-view는 그걸 듣고 store에서 data를 event handler 로 데이터를 받는다. controller-view는 setState() 메서드로 자신들과 그 해당되는 자식들을 다 렌더링을 다시 한다.","position":{"start":{"line":15,"column":1,"offset":520},"end":{"line":15,"column":411,"offset":930},"indent":[]}}],"position":{"start":{"line":15,"column":1,"offset":520},"end":{"line":15,"column":411,"offset":930},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"이렇게 함으로써 데이터 플로우는 한 방향으로 만들 수 있고 state는 한 곳에 저장되게끔 하고 어플들을 다 independent 하게끔 만들어서 SOC 설계 방식을 따라 만들 수 있다. 그렇게 함으로써 하나를 수정하면 다른 것을 수정 안 해도 되게끔 만들 수 있다.","position":{"start":{"line":17,"column":1,"offset":932},"end":{"line":17,"column":150,"offset":1081},"indent":[]}}],"position":{"start":{"line":17,"column":1,"offset":932},"end":{"line":17,"column":150,"offset":1081},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Redux는 flux 와 같은 개념이지만 다른 점이 있다면 store 이 하나이다. store 이 하나여서 데이터들은 다 거기에 저장되어 있고 보기 쉽고 조작도 쉽다. 또한 미들웨어로 정의함으로써 쓰고 있는 action들을 조작할 수 있다.","position":{"start":{"line":19,"column":1,"offset":1083},"end":{"line":19,"column":135,"offset":1217},"indent":[]}}],"position":{"start":{"line":19,"column":1,"offset":1083},"end":{"line":19,"column":135,"offset":1217},"indent":[]}},{"type":"thematicBreak","position":{"start":{"line":21,"column":1,"offset":1219},"end":{"line":21,"column":4,"offset":1222},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"Component, prop, state","position":{"start":{"line":23,"column":1,"offset":1224},"end":{"line":23,"column":23,"offset":1246},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":1224},"end":{"line":23,"column":23,"offset":1246},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"component로 우리는 데이터들을 제 조립해서 지정한 인터페이스를 보여준다. react에서 쓰는 하나의 모듈이라고도 볼 수 있다. 보통 컴포넌트를 분리해서 작성해서 프로젝트의 유지 및 보수를 수월하게끔 관리를 한다.","position":{"start":{"line":25,"column":1,"offset":1248},"end":{"line":25,"column":123,"offset":1370},"indent":[]}}],"position":{"start":{"line":25,"column":1,"offset":1248},"end":{"line":25,"column":123,"offset":1370},"indent":[]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Hello</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>","position":{"start":{"line":27,"column":1,"offset":1372},"end":{"line":29,"column":4,"offset":1426},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"이것 또한 component이다. 정확히 말해서는 화살표 함수를 쓴 함수 component이다.","position":{"start":{"line":31,"column":1,"offset":1428},"end":{"line":31,"column":54,"offset":1481},"indent":[]}}],"position":{"start":{"line":31,"column":1,"offset":1428},"end":{"line":31,"column":54,"offset":1481},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"component를 만들때","position":{"start":{"line":33,"column":1,"offset":1483},"end":{"line":33,"column":15,"offset":1497},"indent":[]}}],"position":{"start":{"line":33,"column":1,"offset":1483},"end":{"line":33,"column":15,"offset":1497},"indent":[]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">App</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n           <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"App\"</span><span class=\"token operator\">></span>\n             <span class=\"token operator\">&lt;</span>header className<span class=\"token operator\">=</span><span class=\"token string\">\"App-header\"</span><span class=\"token operator\">></span>\n                 <span class=\"token operator\">&lt;</span>img src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>logo<span class=\"token punctuation\">}</span> className<span class=\"token operator\">=</span><span class=\"token string\">\"App-logo\"</span> alt<span class=\"token operator\">=</span><span class=\"token string\">\"logo\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n                  <span class=\"token operator\">&lt;</span>h1 className<span class=\"token operator\">=</span><span class=\"token string\">\"App-title\"</span><span class=\"token operator\">></span>Welcome to React<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>header<span class=\"token operator\">></span>\n              <span class=\"token operator\">&lt;</span>p className<span class=\"token operator\">=</span><span class=\"token string\">\"App-intro\"</span><span class=\"token operator\">></span>\n                  To <span class=\"token keyword\">get</span> started<span class=\"token punctuation\">,</span> edit <span class=\"token operator\">&lt;</span>code<span class=\"token operator\">></span>src<span class=\"token operator\">/</span>App<span class=\"token punctuation\">.</span>js<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>code<span class=\"token operator\">></span> and save to reload<span class=\"token punctuation\">.</span>\n              <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n             <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":35,"column":1,"offset":1499},"end":{"line":51,"column":4,"offset":1986},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"class로 통해서 만들고 render을 쓰는것이다.","position":{"start":{"line":53,"column":1,"offset":1988},"end":{"line":53,"column":30,"offset":2017},"indent":[]}}],"position":{"start":{"line":53,"column":1,"offset":1988},"end":{"line":53,"column":30,"offset":2017},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"그런 후에\nindex.js 에서","position":{"start":{"line":55,"column":1,"offset":2019},"end":{"line":56,"column":12,"offset":2036},"indent":[1]}}],"position":{"start":{"line":55,"column":1,"offset":2019},"end":{"line":56,"column":12,"offset":2036},"indent":[1]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> App <span class=\"token keyword\">from</span> <span class=\"token string\">'./App'</span><span class=\"token punctuation\">;</span>\n\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>App <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 첫번째 파라미터는 무엇을 보여줄지. 두번째 파라미터는 어떤 DOM 에다가 보여줄지.</span></code></pre></div>","position":{"start":{"line":58,"column":1,"offset":2038},"end":{"line":63,"column":4,"offset":2216},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"함수(스테이트리스) 와 class(스테이트풀) component","position":{"start":{"line":65,"column":1,"offset":2218},"end":{"line":65,"column":36,"offset":2253},"indent":[]}}],"position":{"start":{"line":65,"column":1,"offset":2218},"end":{"line":65,"column":36,"offset":2253},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"함수형은 props를 써서 react 요소를 return 을 해줘서 렌더링을 해준다.","position":{"start":{"line":67,"column":1,"offset":2255},"end":{"line":67,"column":48,"offset":2302},"indent":[]}},{"type":"break","position":{"start":{"line":67,"column":48,"offset":2302},"end":{"line":68,"column":1,"offset":2305},"indent":[1]}},{"type":"text","value":"class component는 logic 을 담고 있고 state도 담고 다른 component를 담음으로써 container 역할도 한다.","position":{"start":{"line":68,"column":1,"offset":2305},"end":{"line":68,"column":79,"offset":2383},"indent":[]}}],"position":{"start":{"line":67,"column":1,"offset":2255},"end":{"line":68,"column":79,"offset":2383},"indent":[1]}},{"type":"paragraph","children":[{"type":"text","value":"둘 중 어느 것을 골라야 할 때 고려해야 할 점은 state를 관리하던가, lifecycle 메서드나, logic이나 event handler을 써야 할 때 class를 쓰고 아니면 함수형 component를 쓰면 된다.","position":{"start":{"line":70,"column":1,"offset":2385},"end":{"line":70,"column":124,"offset":2508},"indent":[]}}],"position":{"start":{"line":70,"column":1,"offset":2385},"end":{"line":70,"column":124,"offset":2508},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"prop는 component를 쉽고 다양하게 커스텀 하게 쓸 수 있게 만든 방식이다. 그것들은 속성/데이터를 한 컴포넌트에서 다른 컴포넌트를 보내는 방법을 갖는다. 보통 parent에서 child 컴포넌트로 한방향 데이터플로우 를 갖는다. 주의점은 prop로 보낸것들은 read-only이고 절대로 수정하면 안 된다.","position":{"start":{"line":72,"column":1,"offset":2510},"end":{"line":72,"column":178,"offset":2687},"indent":[]}}],"position":{"start":{"line":72,"column":1,"offset":2510},"end":{"line":72,"column":178,"offset":2687},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"react component ‘Welcome’ 이름을 갖는 예시","position":{"start":{"line":74,"column":1,"offset":2689},"end":{"line":74,"column":36,"offset":2724},"indent":[]}}],"position":{"start":{"line":74,"column":1,"offset":2689},"end":{"line":74,"column":36,"offset":2724},"indent":[]}},{"type":"html","lang":"HTML","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>root<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>","position":{"start":{"line":76,"column":1,"offset":2726},"end":{"line":78,"column":4,"offset":2759},"indent":[1,1]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">Welcome</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello React<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Welcome <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Hello React!</span></code></pre></div>","position":{"start":{"line":80,"column":1,"offset":2761},"end":{"line":85,"column":4,"offset":2912},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"es6 class를 써서 react component ‘Welcome’ 이름을 갖고 render 메서드를 쓴 예시","position":{"start":{"line":87,"column":1,"offset":2914},"end":{"line":87,"column":64,"offset":2977},"indent":[]}}],"position":{"start":{"line":87,"column":1,"offset":2914},"end":{"line":87,"column":64,"offset":2977},"indent":[]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Welcome</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello React<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Welcome <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">//Hello React!</span></code></pre></div>","position":{"start":{"line":89,"column":1,"offset":2979},"end":{"line":94,"column":4,"offset":3164},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"속성 전달 인자를 갖는 예시","position":{"start":{"line":96,"column":1,"offset":3168},"end":{"line":96,"column":16,"offset":3183},"indent":[]}}],"position":{"start":{"line":96,"column":1,"offset":3168},"end":{"line":96,"column":16,"offset":3183},"indent":[]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Welcome</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\nReactDOM<span class=\"token punctuation\">.</span><span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>Welcome name<span class=\"token operator\">=</span><span class=\"token string\">\"John Doe\"</span><span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'root'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">//Hello React!</span></code></pre></div>","position":{"start":{"line":98,"column":1,"offset":3185},"end":{"line":103,"column":4,"offset":3395},"indent":[1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"state 란 동적인 데이터와 컴포넌트의 성격을 저장하는 객체이다. 동적인 데이터라서 정보가 변하는 것을 렌더링 중간중간에 감지할 수 있다. state는 무조건 class로 만 정의할 수 있다.","position":{"start":{"line":105,"column":1,"offset":3397},"end":{"line":105,"column":109,"offset":3505},"indent":[]}}],"position":{"start":{"line":105,"column":1,"offset":3397},"end":{"line":105,"column":109,"offset":3505},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"state는 props 와 비슷하지만, state는 private 하고 모든 것은 그 componenet에 정의된 state에서 결정된다. props에 의하여 출력이 결정되지 않는다.","position":{"start":{"line":107,"column":1,"offset":3507},"end":{"line":107,"column":103,"offset":3609},"indent":[]}}],"position":{"start":{"line":107,"column":1,"offset":3507},"end":{"line":107,"column":103,"offset":3609},"indent":[]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Hi</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hi<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":109,"column":1,"offset":3611},"end":{"line":115,"column":4,"offset":3705},"indent":[1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"위에 있는 코드는 일반 class component이다.","position":{"start":{"line":117,"column":1,"offset":3707},"end":{"line":117,"column":32,"offset":3738},"indent":[]}}],"position":{"start":{"line":117,"column":1,"offset":3707},"end":{"line":117,"column":32,"offset":3738},"indent":[]}},{"type":"html","lang":"javascript","meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Hi</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">React<span class=\"token punctuation\">.</span>Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">props</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n   <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span>props<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n     <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n       name<span class=\"token operator\">:</span> ‘MyName’\n     <span class=\"token punctuation\">}</span>\n   <span class=\"token punctuation\">}</span>\n   <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n     <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span>Hello <span class=\"token punctuation\">{</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>name <span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n   <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","position":{"start":{"line":119,"column":1,"offset":3740},"end":{"line":131,"column":4,"offset":3954},"indent":[1,1,1,1,1,1,1,1,1,1,1,1]}},{"type":"paragraph","children":[{"type":"text","value":"이것은 스테이트를 추가한 것이다. 위에 보시다시피 props를 불러오는데 super()은 constructor을 쓸 때는 필수이고 props를 부르긴 했는데 안 쓴다. 이것은 왜냐면 나중에 확장성을 위해서 연동이 되는지 확인 용이다. state를 초기화할 때 this.state를 썼는데 그 후에 state 변화를 주기 위해서 this.setState를 써야 한다. 이것을 써야지만 component 가 state에 변화에 따라 브라우저에 다시 렌더링을 보장할 수 있다.","position":{"start":{"line":133,"column":1,"offset":3956},"end":{"line":133,"column":264,"offset":4219},"indent":[]}}],"position":{"start":{"line":133,"column":1,"offset":3956},"end":{"line":133,"column":264,"offset":4219},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"정리해서 쉽게 쓸 수 있고, DOM 조작이 쉽고, 빠르고, 선언적 UI이고, 컴포넌트를 재사용이 가능하고, 데이터 플로우가 한 방향이라서 쓰기 좋다.","position":{"start":{"line":135,"column":1,"offset":4221},"end":{"line":135,"column":84,"offset":4304},"indent":[]}}],"position":{"start":{"line":135,"column":1,"offset":4221},"end":{"line":135,"column":84,"offset":4304},"indent":[]}},{"type":"paragraph","children":[{"type":"text","value":"References:","position":{"start":{"line":137,"column":1,"offset":4306},"end":{"line":137,"column":12,"offset":4317},"indent":[]}}],"position":{"start":{"line":137,"column":1,"offset":4306},"end":{"line":137,"column":12,"offset":4317},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://facebook.github.io/flux/docs/in-depth-overview","children":[{"type":"text","value":"https://facebook.github.io/flux/docs/in-depth-overview","position":{"start":{"line":139,"column":2,"offset":4320},"end":{"line":139,"column":56,"offset":4374},"indent":[]}}],"position":{"start":{"line":139,"column":1,"offset":4319},"end":{"line":139,"column":57,"offset":4375},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":139,"column":1,"offset":4319},"end":{"line":139,"column":57,"offset":4375},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://stories.jotform.com/7-reasons-why-you-should-use-react-ad420c634247","children":[{"type":"text","value":"https://stories.jotform.com/7-reasons-why-you-should-use-react-ad420c634247","position":{"start":{"line":141,"column":2,"offset":4378},"end":{"line":141,"column":77,"offset":4453},"indent":[]}}],"position":{"start":{"line":141,"column":1,"offset":4377},"end":{"line":141,"column":78,"offset":4454},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":141,"column":1,"offset":4377},"end":{"line":141,"column":78,"offset":4454},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://reactjs.org/","children":[{"type":"text","value":"https://reactjs.org/","position":{"start":{"line":143,"column":2,"offset":4457},"end":{"line":143,"column":22,"offset":4477},"indent":[]}}],"position":{"start":{"line":143,"column":1,"offset":4456},"end":{"line":143,"column":23,"offset":4478},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":143,"column":1,"offset":4456},"end":{"line":143,"column":23,"offset":4478},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://www.w3schools.com/whatis/whatis_react.asp","children":[{"type":"text","value":"https://www.w3schools.com/whatis/whatis_react.asp","position":{"start":{"line":145,"column":2,"offset":4481},"end":{"line":145,"column":51,"offset":4530},"indent":[]}}],"position":{"start":{"line":145,"column":1,"offset":4480},"end":{"line":145,"column":52,"offset":4531},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":145,"column":1,"offset":4480},"end":{"line":145,"column":52,"offset":4531},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://velopert.com/3629","children":[{"type":"text","value":"https://velopert.com/3629","position":{"start":{"line":147,"column":2,"offset":4534},"end":{"line":147,"column":27,"offset":4559},"indent":[]}}],"position":{"start":{"line":147,"column":1,"offset":4533},"end":{"line":147,"column":28,"offset":4560},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":147,"column":1,"offset":4533},"end":{"line":147,"column":28,"offset":4560},"indent":[]}},{"type":"paragraph","children":[{"type":"link","title":null,"url":"https://medium.com/the-andela-way/understanding-react-components-37f841c1f3bb","children":[{"type":"text","value":"https://medium.com/the-andela-way/understanding-react-components-37f841c1f3bb","position":{"start":{"line":149,"column":2,"offset":4563},"end":{"line":149,"column":79,"offset":4640},"indent":[]}}],"position":{"start":{"line":149,"column":1,"offset":4562},"end":{"line":149,"column":80,"offset":4641},"indent":[]},"data":{"hProperties":{"target":"_blank","rel":"nofollow noopener noreferrer"}}}],"position":{"start":{"line":149,"column":1,"offset":4562},"end":{"line":149,"column":80,"offset":4641},"indent":[]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":150,"column":1,"offset":4642}}}}